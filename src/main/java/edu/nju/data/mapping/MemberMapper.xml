<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.nju.data.dao.mapper.MemberMapper" >
  <resultMap id="BaseResultMap" type="edu.nju.data.model.Member" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="member_email" property="member_email" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="SkillResultMap" type="edu.nju.data.model.LevelUpRecord" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <id column="skill_name" property="skill_name" jdbcType="VARCHAR" />
    <id column="level" property="level" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="GraduateResultMap" type="edu.nju.data.model.GraduateRecord" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <id column="role" property="role" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    username, password, member_email, role
  </sql>
  <sql id="Skill_Column_List" >
    username, skill_name, level, time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from member
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from member
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="edu.nju.data.model.Member" >
    insert into member (username, password, member_email, 
      role)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{member_email,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.data.model.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="member_email != null" >
        member_email,
      </if>
      <if test="role != null" >
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="member_email != null" >
        #{member_email,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.data.model.Member" >
    update member
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="member_email != null" >
        member_email = #{member_email,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.data.model.Member" >
    update member
    set password = #{password,jdbcType=VARCHAR},
      member_email = #{member_email,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateRole" parameterType="edu.nju.data.model.Member" >
    update member
    set role = #{1}
    where username = #{0}
  </update>
  <update id="updateLevel" >
    update member_skill
    set level = level +1,
         time = #{2}
    where username = #{1} and skill_name= #{0}
  </update>
  <insert id="insertMemberSkill">
    insert IGNORE into member_skill (username, skill_name, level,
    time)
    values (#{0}, #{1}, #{2},
    #{3})
  </insert>
  <select id="searchMember" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from member
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <insert id="addMember" parameterType="edu.nju.data.model.Member" flushCache="true">
    insert into member(username,password,member_email,role) values(#{username},#{password},#{member_email},#{role})
  </insert>
  <select id="getLearnedRepos"  resultType="java.lang.String" parameterType="java.lang.String" >
    select full_name
    from member_report
    where evaluate = 0 AND username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="getLevelUpRecordOfUser"  resultMap="SkillResultMap" parameterType="java.lang.String" >
    select
    <include refid="Skill_Column_List" />
    from member_skill
    where username = #{userName,jdbcType=VARCHAR}
    ORDER BY time DESC
  </select>

  <select id="getGraduateRecordOfUser" resultMap="GraduateResultMap" parameterType="java.lang.String" >
    select username,role,time
    from graduate_record
    where username = #{userName,jdbcType=VARCHAR}
    ORDER BY time DESC
  </select>
</mapper>