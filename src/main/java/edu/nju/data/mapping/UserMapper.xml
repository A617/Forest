<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.nju.data.dao.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="edu.nju.data.model.User" >
    <id column="login" property="login" jdbcType="CHAR" />
    <result column="html_url" property="html_url" jdbcType="CHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="avatar_url" property="avatar_url" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="CHAR" />
    <result column="blog" property="blog" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="CHAR" />
    <result column="public_repos" property="public_repos" jdbcType="INTEGER" />
    <result column="public_gists" property="public_gists" jdbcType="INTEGER" />
    <result column="followers" property="followers" jdbcType="INTEGER" />
    <result column="following" property="following" jdbcType="INTEGER" />
    <result column="created_at" property="created_at" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updated_at" jdbcType="TIMESTAMP" />
    <result column="popular_score" property="popular_score" jdbcType="DOUBLE" />
    <result column="teamwork_score" property="teamwork_score" jdbcType="DOUBLE" />
    <result column="liveness_score" property="liveness_score" jdbcType="DOUBLE" />
    <result column="experience_score" property="experience_score" jdbcType="DOUBLE" />
    <result column="quantity_score" property="quantity_score" jdbcType="DOUBLE" />
    <result column="languages" property="languages" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    login, html_url, type, avatar_url, name, location, email, blog, company, public_repos, 
    public_gists, followers, following, created_at, updated_at, popular_score, teamwork_score, 
    liveness_score, experience_score, quantity_score, languages
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where login = #{login,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where login = #{login,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="edu.nju.data.model.User" >
    insert into user (login, html_url, type, 
      avatar_url, name, location, 
      email, blog, company, public_repos, 
      public_gists, followers, following, 
      created_at, updated_at, popular_score, 
      teamwork_score, liveness_score, experience_score, 
      quantity_score, languages)
    values (#{login,jdbcType=CHAR}, #{html_url,jdbcType=CHAR}, #{type,jdbcType=CHAR}, 
      #{avatar_url,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{location,jdbcType=VARCHAR}, 
      #{email,jdbcType=CHAR}, #{blog,jdbcType=VARCHAR}, #{company,jdbcType=CHAR}, #{public_repos,jdbcType=INTEGER}, 
      #{public_gists,jdbcType=INTEGER}, #{followers,jdbcType=INTEGER}, #{following,jdbcType=INTEGER}, 
      #{created_at,jdbcType=TIMESTAMP}, #{updated_at,jdbcType=TIMESTAMP}, #{popular_score,jdbcType=DOUBLE}, 
      #{teamwork_score,jdbcType=DOUBLE}, #{liveness_score,jdbcType=DOUBLE}, #{experience_score,jdbcType=DOUBLE}, 
      #{quantity_score,jdbcType=DOUBLE}, #{languages,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.data.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="login != null" >
        login,
      </if>
      <if test="html_url != null" >
        html_url,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="avatar_url != null" >
        avatar_url,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="blog != null" >
        blog,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="public_repos != null" >
        public_repos,
      </if>
      <if test="public_gists != null" >
        public_gists,
      </if>
      <if test="followers != null" >
        followers,
      </if>
      <if test="following != null" >
        following,
      </if>
      <if test="created_at != null" >
        created_at,
      </if>
      <if test="updated_at != null" >
        updated_at,
      </if>
      <if test="popular_score != null" >
        popular_score,
      </if>
      <if test="teamwork_score != null" >
        teamwork_score,
      </if>
      <if test="liveness_score != null" >
        liveness_score,
      </if>
      <if test="experience_score != null" >
        experience_score,
      </if>
      <if test="quantity_score != null" >
        quantity_score,
      </if>
      <if test="languages != null" >
        languages,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="login != null" >
        #{login,jdbcType=CHAR},
      </if>
      <if test="html_url != null" >
        #{html_url,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="avatar_url != null" >
        #{avatar_url,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=CHAR},
      </if>
      <if test="blog != null" >
        #{blog,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=CHAR},
      </if>
      <if test="public_repos != null" >
        #{public_repos,jdbcType=INTEGER},
      </if>
      <if test="public_gists != null" >
        #{public_gists,jdbcType=INTEGER},
      </if>
      <if test="followers != null" >
        #{followers,jdbcType=INTEGER},
      </if>
      <if test="following != null" >
        #{following,jdbcType=INTEGER},
      </if>
      <if test="created_at != null" >
        #{created_at,jdbcType=TIMESTAMP},
      </if>
      <if test="updated_at != null" >
        #{updated_at,jdbcType=TIMESTAMP},
      </if>
      <if test="popular_score != null" >
        #{popular_score,jdbcType=DOUBLE},
      </if>
      <if test="teamwork_score != null" >
        #{teamwork_score,jdbcType=DOUBLE},
      </if>
      <if test="liveness_score != null" >
        #{liveness_score,jdbcType=DOUBLE},
      </if>
      <if test="experience_score != null" >
        #{experience_score,jdbcType=DOUBLE},
      </if>
      <if test="quantity_score != null" >
        #{quantity_score,jdbcType=DOUBLE},
      </if>
      <if test="languages != null" >
        #{languages,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.data.model.User" >
    update user
    <set >
      <if test="html_url != null" >
        html_url = #{html_url,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="avatar_url != null" >
        avatar_url = #{avatar_url,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="blog != null" >
        blog = #{blog,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=CHAR},
      </if>
      <if test="public_repos != null" >
        public_repos = #{public_repos,jdbcType=INTEGER},
      </if>
      <if test="public_gists != null" >
        public_gists = #{public_gists,jdbcType=INTEGER},
      </if>
      <if test="followers != null" >
        followers = #{followers,jdbcType=INTEGER},
      </if>
      <if test="following != null" >
        following = #{following,jdbcType=INTEGER},
      </if>
      <if test="created_at != null" >
        created_at = #{created_at,jdbcType=TIMESTAMP},
      </if>
      <if test="updated_at != null" >
        updated_at = #{updated_at,jdbcType=TIMESTAMP},
      </if>
      <if test="popular_score != null" >
        popular_score = #{popular_score,jdbcType=DOUBLE},
      </if>
      <if test="teamwork_score != null" >
        teamwork_score = #{teamwork_score,jdbcType=DOUBLE},
      </if>
      <if test="liveness_score != null" >
        liveness_score = #{liveness_score,jdbcType=DOUBLE},
      </if>
      <if test="experience_score != null" >
        experience_score = #{experience_score,jdbcType=DOUBLE},
      </if>
      <if test="quantity_score != null" >
        quantity_score = #{quantity_score,jdbcType=DOUBLE},
      </if>
      <if test="languages != null" >
        languages = #{languages,jdbcType=VARCHAR},
      </if>
    </set>
    where login = #{login,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.data.model.User" >
    update user
    set html_url = #{html_url,jdbcType=CHAR},
      type = #{type,jdbcType=CHAR},
      avatar_url = #{avatar_url,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      location = #{location,jdbcType=VARCHAR},
      email = #{email,jdbcType=CHAR},
      blog = #{blog,jdbcType=VARCHAR},
      company = #{company,jdbcType=CHAR},
      public_repos = #{public_repos,jdbcType=INTEGER},
      public_gists = #{public_gists,jdbcType=INTEGER},
      followers = #{followers,jdbcType=INTEGER},
      following = #{following,jdbcType=INTEGER},
      created_at = #{created_at,jdbcType=TIMESTAMP},
      updated_at = #{updated_at,jdbcType=TIMESTAMP},
      popular_score = #{popular_score,jdbcType=DOUBLE},
      teamwork_score = #{teamwork_score,jdbcType=DOUBLE},
      liveness_score = #{liveness_score,jdbcType=DOUBLE},
      experience_score = #{experience_score,jdbcType=DOUBLE},
      quantity_score = #{quantity_score,jdbcType=DOUBLE},
      languages = #{languages,jdbcType=VARCHAR}
    where login = #{login,jdbcType=CHAR}
  </update>
</mapper>